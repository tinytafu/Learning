//左值和右值

#include <iostream>


int foo() {
  return 1;
}
int main () {

  //-------具名内存 可以取地址 可以修改内存中的值 当前作用域的生命周期-> 非常左值-----
  int a = 20;
  &a;
  a = 15;
  //-------------------------------------------
  //-------具名内存 可以取地址 不可以修改内存中的值 当前作用域的生命周期-> 常左值-----
  const int b = 30;
  &b;
  //b = 20;error b是一个常左值
  /*匿名内存 不可以取地址 不可以修改 生命周期是当前表达式的最大结束处,也就是语句级别
   * 的生命周期 -- 右值 标准给出直接修改右值是毫无意义的,因为它在当前表达式结束之后就被回收了*/
  10;
  //&10;//error 10是一个右值
  // 10 = 15;//error 
  foo();//1.分配一块内存存储返回值,2.生成跳转指令
  //&foo();error 
  //foo() = 10;error

}
